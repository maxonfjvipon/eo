xsls: []
tests:
  - //errors[count(error)=0]
eo: |
  +package org.eolang

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > compares-two-bools
    Q
    .org
    .eolang
    .bool
      Q
      .org
      .eolang
      .bytes:0
        01-
    .eq > @
      Q
      .org
      .eolang
      .bool:0
        Q
        .org
        .eolang
        .bytes:0
          01-

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > compares-two-different-types
    Q
    .org
    .eolang
    .bool
      Q
      .org
      .eolang
      .bytes:0
        01-
    .eq
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-2A
    .not > @

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > forks-on-condition
    Q
    .org
    .eolang
    .int
      Q
      .org
      .eolang
      .bytes:0
        00-00-00-00-00-00-00-05
    .eq
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-08
    .if
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-7B
      Q
      .org
      .eolang
      .int:1
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-2A
    .eq > @
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-2A

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > iterates-over-simple-counter
    Q
    .org
    .eolang
    .memory > x
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    $
    .x
    .write
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-05
    .eq
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-05
    .and > @
      $
      .x
      .as-int
      .lt
        Q
        .org
        .eolang
        .int:0
          Q
          .org
          .eolang
          .bytes:0
            00-00-00-00-00-00-00-0A
      .while
        [i]:0
          $
          .&
          .x
          .write > @
            $
            .&
            .x
            .as-int
            .plus:0
              Q
              .org
              .eolang
              .int:0
                Q
                .org
                .eolang
                .bytes:0
                  00-00-00-00-00-00-00-01
      .eq:0
        Q
        .org
        .eolang
        .int:0
          Q
          .org
          .eolang
          .bytes:0
            00-00-00-00-00-00-00-0B

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > compares-bool-to-bytes
    Q
    .org
    .eolang
    .bool
      Q
      .org
      .eolang
      .bytes:0
        01-
    .eq
      Q
      .org
      .eolang
      .bytes:0
        01-
    .and > @
      Q
      .org
      .eolang
      .bool
        Q
        .org
        .eolang
        .bytes:0
          00-
      .eq:0
        Q
        .org
        .eolang
        .bytes:0
          00-

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > compares-bool-to-string
    Q
    .org
    .eolang
    .bool
      Q
      .org
      .eolang
      .bytes:0
        01-
    .eq
      Q
      .org
      .eolang
      .string:0
        Q
        .org
        .eolang
        .bytes:0
          01-
    .and > @
      Q
      .org
      .eolang
      .bool
        Q
        .org
        .eolang
        .bytes:0
          00-
      .eq:0
        Q
        .org
        .eolang
        .string:0
          Q
          .org
          .eolang
          .bytes:0
            00-

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > compares-bool-to-bytes-reverse
    Q
    .org
    .eolang
    .bytes
      01-
    .as-bytes
    .eq
      Q
      .org
      .eolang
      .bool:0
        Q
        .org
        .eolang
        .bytes:0
          01-
    .and > @
      Q
      .org
      .eolang
      .bytes
        00-
      .as-bytes
      .eq:0
        Q
        .org
        .eolang
        .bool:0
          Q
          .org
          .eolang
          .bytes:0
            00-

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > complex-bool-expression-in-while
    Q
    .org
    .eolang
    .memory > m
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    Q
    .org
    .eolang
    .seq > res
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple:0
            Q
            .org
            .eolang
            .tuple
            .empty:0
            $
            .m
            .write:1
              Q
              .org
              .eolang
              .int:0
                Q
                .org
                .eolang
                .bytes:0
                  00-00-00-00-00-00-00-05
          $
          .m
          .as-int
          .gt
            Q
            .org
            .eolang
            .int:0
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-00
          .eq
            Q
            .org
            .eolang
            .bool:0
              Q
              .org
              .eolang
              .bytes:0
                01-
          .while:1
            [i]:0
              Q
              .org
              .eolang
              .seq > @
                Q
                .org
                .eolang
                .tuple:0
                  Q
                  .org
                  .eolang
                  .tuple:0
                    Q
                    .org
                    .eolang
                    .tuple
                    .empty:0
                    $
                    .&
                    .m
                    .write:1
                      $
                      .&
                      .m
                      .as-int
                      .minus:0
                        Q
                        .org
                        .eolang
                        .int:0
                          Q
                          .org
                          .eolang
                          .bytes:0
                            00-00-00-00-00-00-00-01
                  Q
                  .org
                  .eolang
                  .bool:1
                    Q
                    .org
                    .eolang
                    .bytes:0
                      01-
        Q
        .org
        .eolang
        .bool:1
          Q
          .org
          .eolang
          .bytes:0
            01-
    Q
    .org
    .eolang
    .nop > @

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > last-while-dataization-object
    Q
    .org
    .eolang
    .memory > x
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    $
    .x
    .as-int
    .lt
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-02
    .while
      [i]:0
        Q
        .org
        .eolang
        .seq > @
          Q
          .org
          .eolang
          .tuple:0
            Q
            .org
            .eolang
            .tuple:0
              Q
              .org
              .eolang
              .tuple
              .empty:0
              $
              .&
              .x
              .write:1
                $
                .&
                .x
                .as-int
                .plus:0
                  Q
                  .org
                  .eolang
                  .int:0
                    Q
                    .org
                    .eolang
                    .bytes:0
                      00-00-00-00-00-00-00-01
            $
            .&
            .x
            .as-int:1
    .eq > @
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-03

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > while-without-last-dataization
    Q
    .org
    .eolang
    .memory > x
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    Q
    .org
    .eolang
    .seq
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple
          .empty:0
          $
          .x
          .as-int
          .lt
            Q
            .org
            .eolang
            .int:0
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-02
          .while
            [i]:0
              $
              .&
              .x
              .write > @
                $
                .&
                .x
                .as-int
                .plus:0
                  Q
                  .org
                  .eolang
                  .int:0
                    Q
                    .org
                    .eolang
                    .bytes:0
                      00-00-00-00-00-00-00-01
          .@
          .<:1
        $
        .x
        .as-int:1
    .eq > @
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-02

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > last-while-dataization-object-with-false-condition
    Q
    .org
    .eolang
    .memory > x
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-03
    $
    .x
    .as-int
    .lt
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    .while
      [i]:0
        Q
        .org
        .eolang
        .seq > @
          Q
          .org
          .eolang
          .tuple:0
            Q
            .org
            .eolang
            .tuple:0
              Q
              .org
              .eolang
              .tuple
              .empty:0
              $
              .&
              .x
              .write:1
                $
                .&
                .x
                .as-int
                .plus:0
                  Q
                  .org
                  .eolang
                  .int:0
                    Q
                    .org
                    .eolang
                    .bytes:0
                      00-00-00-00-00-00-00-01
            $
            .&
            .x:1
    .eq > @
      Q
      .org
      .eolang
      .bool:0
        Q
        .org
        .eolang
        .bytes:0
          00-

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > iterating-tuple-with-while-using-internal-iterator
    Q
    .org
    .eolang
    .tuple > arr
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple:0
            Q
            .org
            .eolang
            .tuple
            .empty:0
            Q
            .org
            .eolang
            .int:1
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-01
          Q
          .org
          .eolang
          .int:1
            Q
            .org
            .eolang
            .bytes:0
              00-00-00-00-00-00-00-01
        Q
        .org
        .eolang
        .int:1
          Q
          .org
          .eolang
          .bytes:0
            00-00-00-00-00-00-00-01
      Q
      .org
      .eolang
      .int:1
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    Q
    .org
    .eolang
    .memory > iter
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    Q
    .org
    .eolang
    .memory > acc
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    $
    .arr
    .length
    .minus > max
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    Q
    .org
    .eolang
    .seq > @
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple
          .empty:0
          $
          .max
          .eq
            Q
            .org
            .eolang
            .int:0
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-00
          .if:1
            $
            .acc
            .write:0
              $
              .acc
              .as-int
              .plus:0
                $
                .arr
                .at:0
                  Q
                  .org
                  .eolang
                  .int:0
                    Q
                    .org
                    .eolang
                    .bytes:0
                      00-00-00-00-00-00-00-00
            $
            .iter
            .as-int
            .lt
              $
              .max:0
            .while:1
              [i]:0
                Q
                .org
                .eolang
                .seq > @
                  Q
                  .org
                  .eolang
                  .tuple:0
                    Q
                    .org
                    .eolang
                    .tuple:0
                      Q
                      .org
                      .eolang
                      .tuple
                      .empty:0
                      $
                      .&
                      .acc
                      .write:1
                        $
                        .&
                        .acc
                        .as-int
                        .plus:0
                          $
                          .&
                          .arr
                          .at:0
                            $
                            .i:0
                    $
                    .&
                    .iter
                    .write:1
                      $
                      .&
                      .iter
                      .as-int
                      .plus:0
                        Q
                        .org
                        .eolang
                        .int:0
                          Q
                          .org
                          .eolang
                          .bytes:0
                            00-00-00-00-00-00-00-01
        $
        .acc
        .as-int
        .eq:1
          $
          .arr
          .length:0

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > iterating-tuple-with-while-using-external-iterator
    Q
    .org
    .eolang
    .tuple > arr
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple:0
            Q
            .org
            .eolang
            .tuple
            .empty:0
            Q
            .org
            .eolang
            .int:1
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-01
          Q
          .org
          .eolang
          .int:1
            Q
            .org
            .eolang
            .bytes:0
              00-00-00-00-00-00-00-01
        Q
        .org
        .eolang
        .int:1
          Q
          .org
          .eolang
          .bytes:0
            00-00-00-00-00-00-00-01
      Q
      .org
      .eolang
      .int:1
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    Q
    .org
    .eolang
    .memory > iter
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    Q
    .org
    .eolang
    .memory > acc
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    $
    .arr
    .length
    .minus > max
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    Q
    .org
    .eolang
    .seq > nop
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple
          .empty:0
          $
          .max
          .eq
            Q
            .org
            .eolang
            .int:0
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-00
          .if:1
            $
            .acc
            .write:0
              $
              .acc
              .as-int
              .plus:0
                $
                .arr
                .at:0
                  Q
                  .org
                  .eolang
                  .int:0
                    Q
                    .org
                    .eolang
                    .bytes:0
                      00-00-00-00-00-00-00-00
            $
            .iter
            .as-int
            .lt
              $
              .max:0
            .while:1
              [i]:0
                Q
                .org
                .eolang
                .seq > @
                  Q
                  .org
                  .eolang
                  .tuple:0
                    Q
                    .org
                    .eolang
                    .tuple:0
                      Q
                      .org
                      .eolang
                      .tuple
                      .empty:0
                      $
                      .&
                      .acc
                      .write:1
                        $
                        .&
                        .acc
                        .as-int
                        .plus:0
                          $
                          .&
                          .arr
                          .at:0
                            $
                            .&
                            .iter
                            .as-int:0
                    $
                    .&
                    .iter
                    .write:1
                      $
                      .&
                      .iter
                      .as-int
                      .plus:0
                        Q
                        .org
                        .eolang
                        .int:0
                          Q
                          .org
                          .eolang
                          .bytes:0
                            00-00-00-00-00-00-00-01
        $
        .acc
        .as-int
        .eq:1
          $
          .arr
          .length:0
    Q
    .org
    .eolang
    .bool > @
      Q
      .org
      .eolang
      .bytes:0
        01-

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > iterating-tuple-with-while-without-body-multiple
    Q
    .org
    .eolang
    .tuple > arr
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple:0
            Q
            .org
            .eolang
            .tuple
            .empty:0
            Q
            .org
            .eolang
            .int:1
              Q
              .org
              .eolang
              .bytes:0
                00-00-00-00-00-00-00-01
          Q
          .org
          .eolang
          .int:1
            Q
            .org
            .eolang
            .bytes:0
              00-00-00-00-00-00-00-01
        Q
        .org
        .eolang
        .int:1
          Q
          .org
          .eolang
          .bytes:0
            00-00-00-00-00-00-00-01
      Q
      .org
      .eolang
      .int:1
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    Q
    .org
    .eolang
    .memory > iter
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    Q
    .org
    .eolang
    .memory > acc
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    $
    .arr
    .length > max
    Q
    .org
    .eolang
    .seq > @
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple
          .empty:0
          []
            $
            .&
            .iter
            .as-int
            .lt
              $
              .&
              .max:0
            .if > @
              Q
              .org
              .eolang
              .seq:0
                Q
                .org
                .eolang
                .tuple:0
                  Q
                  .org
                  .eolang
                  .tuple:0
                    Q
                    .org
                    .eolang
                    .tuple:0
                      Q
                      .org
                      .eolang
                      .tuple
                      .empty:0
                      $
                      .&
                      .acc
                      .write:1
                        $
                        .&
                        .acc
                        .as-int
                        .plus:0
                          $
                          .&
                          .arr
                          .at:0
                            $
                            .&
                            .iter
                            .as-int:0
                    $
                    .&
                    .iter
                    .write:1
                      $
                      .&
                      .iter
                      .as-int
                      .plus:0
                        Q
                        .org
                        .eolang
                        .int:0
                          Q
                          .org
                          .eolang
                          .bytes:0
                            00-00-00-00-00-00-00-01
                  Q
                  .org
                  .eolang
                  .bool:1
                    Q
                    .org
                    .eolang
                    .bytes:0
                      01-
              Q
              .org
              .eolang
              .bool:1
                Q
                .org
                .eolang
                .bytes:0
                  00-
          .while:1
            Q
            .org
            .eolang
            .nop:0
        $
        .acc
        .as-int
        .eq:1
          $
          .arr
          .length:0

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > iterating-tuple-with-while-without-body-single
    Q
    .org
    .eolang
    .tuple > arr
      Q
      .org
      .eolang
      .tuple
      .empty:0
      Q
      .org
      .eolang
      .int:1
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-01
    Q
    .org
    .eolang
    .memory > iter
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    Q
    .org
    .eolang
    .memory > acc
      Q
      .org
      .eolang
      .int:0
        Q
        .org
        .eolang
        .bytes:0
          00-00-00-00-00-00-00-00
    $
    .arr
    .length > max
    Q
    .org
    .eolang
    .seq > nop
      Q
      .org
      .eolang
      .tuple:0
        Q
        .org
        .eolang
        .tuple:0
          Q
          .org
          .eolang
          .tuple
          .empty:0
          []
            $
            .&
            .iter
            .as-int
            .lt
              $
              .&
              .max:0
            .if > @
              Q
              .org
              .eolang
              .seq:0
                Q
                .org
                .eolang
                .tuple:0
                  Q
                  .org
                  .eolang
                  .tuple:0
                    Q
                    .org
                    .eolang
                    .tuple:0
                      Q
                      .org
                      .eolang
                      .tuple
                      .empty:0
                      $
                      .&
                      .acc
                      .write:1
                        $
                        .&
                        .acc
                        .as-int
                        .plus:0
                          $
                          .&
                          .arr
                          .at:0
                            $
                            .&
                            .iter
                            .as-int:0
                    $
                    .&
                    .iter
                    .write:1
                      $
                      .&
                      .iter
                      .as-int
                      .plus:0
                        Q
                        .org
                        .eolang
                        .int:0
                          Q
                          .org
                          .eolang
                          .bytes:0
                            00-00-00-00-00-00-00-01
                  Q
                  .org
                  .eolang
                  .bool:1
                    Q
                    .org
                    .eolang
                    .bytes:0
                      01-
              Q
              .org
              .eolang
              .bool:1
                Q
                .org
                .eolang
                .bytes:0
                  00-
          .while:1
            $
            .nop:0
        $
        .acc
        .as-int
        .eq:1
          $
          .arr
          .length:0
    Q
    .org
    .eolang
    .bool > @
      Q
      .org
      .eolang
      .bytes:0
        01-