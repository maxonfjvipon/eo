# The MIT License (MIT)
#
# Copyright (c) 2016-2024 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
name: mvn
on:
  push:
    branches:
      - master
    paths-ignore: [ 'paper/**', 'sandbox/**' ]
  pull_request:
    branches:
      - master
    paths-ignore: [ 'paper/**', 'sandbox/**' ]
concurrency:
  group: mvn-${{ github.ref }}
  cancel-in-progress: true
jobs:
  mvn:
    name: mvn
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        java: [ 11, 20 ]
    runs-on: ${{ matrix.os }}
    env:
      CONVERT_PATH: /tmp/antlr4-to-bnf-converter
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-${{ matrix.java }}-maven-
      # The next step is required to avoid some exceptions that occur
      # when running on Windows OS. For example like this one:
      # - https://github.com/objectionary/eo/issues/2336
      # The step disables http multiplexing in Cargo which cause some problems
      # on Windows OS.
      # You can read more about multiplexing right here
      # - https://stackoverflow.com/questions/36517829/what-does-multiplexing-mean-in-http-2
      # Multiplexing in Rust:
      # - https://doc.rust-lang.org/cargo/reference/config.html#httpmultiplexing
      - name: Set Cargo config (Windows)
        if: matrix.os == 'windows-2022'
        run: |
          echo [http] >> %USERPROFILE%\.cargo\config.toml
          echo multiplexing = false >> %USERPROFILE%\.cargo\config.toml
        shell: cmd
      - run: mvn clean install